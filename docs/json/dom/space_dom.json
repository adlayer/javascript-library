[
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>@class\n<ul><li>@requires DomElement</li>\n<li>@requires Ad</li>\n<li>@requires Event</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>@class\n<ul><li>@requires DomElement</li>\n<li>@requires Ad</li>\n<li>@requires Event</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "var SpaceDom = function(){\n\t\t// extends Space\n\t\tSpace.apply(this, arguments);\n\t};\n\t// extends DomElement\n\tSpaceDom.prototype = new DomElement();",
    "ctx": {
      "type": "function",
      "name": "SpaceDom",
      "string": "SpaceDom()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>@public\n<ul><li>@param {Object} DomElement to append in element</li>\n<li>@returns {Object} return this to chain methods</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>@public\n<ul><li>@param {Object} DomElement to append in element</li>\n<li>@returns {Object} return this to chain methods</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "SpaceDom.prototype.placeAd = function(ad){\n\t\tthis.element.appendChild(ad.element);\n\t\treturn this;\n\t};\n\t\n\texports.SpaceDom = SpaceDom;\n})();",
    "ctx": {
      "type": "method",
      "constructor": "SpaceDom",
      "name": "placeAd",
      "string": "SpaceDom.prototype.placeAd()"
    }
  }
]