[
  {
    "tags": [],
    "description": {
      "full": "<p>@class</p>",
      "summary": "<p>@class</p>",
      "body": ""
    },
    "ignore": false,
    "code": "var Page = function( attributes ){",
    "ctx": {
      "type": "function",
      "name": "Page",
      "string": "Page()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>Unique page id\n<ul><li>@type string</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>Unique page id\n<ul><li>@type string</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "this.id = '';",
    "ctx": {
      "type": "property",
      "receiver": "this",
      "name": "id",
      "value": "''",
      "string": "this.id"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>Page name\n<ul><li>@type string</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>Page name\n<ul><li>@type string</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "this.name = '';",
    "ctx": {
      "type": "property",
      "receiver": "this",
      "name": "name",
      "value": "''",
      "string": "this.name"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>Collection of page spaces\n<ul><li>@type array</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>Collection of page spaces\n<ul><li>@type array</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "this.spaces = [];",
    "ctx": {
      "type": "property",
      "receiver": "this",
      "name": "spaces",
      "value": "[]",
      "string": "this.spaces"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>Page status\n<ul><li>@type boolean - true for active and false for inactive</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>Page status\n<ul><li>@type boolean - true for active and false for inactive</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "this.status = true;",
    "ctx": {
      "type": "property",
      "receiver": "this",
      "name": "status",
      "value": "true",
      "string": "this.status"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>@private\n<ul><li>@returns {Object} return this to allow chain pattern</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>@private\n<ul><li>@returns {Object} return this to allow chain pattern</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "var __construct = (function(self){\n\t\t// initiate here\n\t\tfor( var attribute in attributes ){\n\t\t\tif( attributes.hasOwnProperty(attribute) ){\n\t\t\t\tself[attribute] = attributes[attribute];\n\t\t\t}\n\t\t}\n\t\treturn self;\n\t})(this);\n};",
    "ctx": {
      "type": "declaration",
      "name": "__construct",
      "value": "(function(self){",
      "string": "__construct"
    }
  },
  {
    "tags": [
      {
        "type": "returns",
        "string": "{Object} new Page() - return the instance itself to improve chainability"
      },
      {
        "type": "requires",
        "string": "Javascript 1.6"
      },
      {
        "type": "__Warning:__",
        "string": "Don't use this in browser, because it can not work in old browsers"
      },
      {
        "type": "todo:",
        "string": "should be readonly not modify the object just return filtered value"
      }
    ],
    "description": {
      "full": "<p>@public</p>",
      "summary": "<p>@public</p>",
      "body": ""
    },
    "isPrivate": false,
    "ignore": false,
    "code": "Page.prototype.getActiveContent = function(){\n\tif( this.spaces && this.spaces.length >= 1 ){\n\t\t// Run over and redesign every space (removing ads with status false)\n\t\tthis.spaces = this.spaces.map(function(space){\n\t\t\tif( space.ads && space.ads.length >= 1 ){\n\t\t\t\tspace.ads = space.ads.filter(function(ad){\n\t\t\t\t\t// If ad has status equal to false will auto removed from array\n\t\t\t\t\treturn ad.status;\n\t\t\t\t});\n\t\t\t}\n\t\t\t// re-assign modified space to spaces collection\n\t\t\treturn space;\n\t\t});\n\t}\n\treturn this;\n};",
    "ctx": {
      "type": "method",
      "constructor": "Page",
      "name": "getActiveContent",
      "string": "Page.prototype.getActiveContent()"
    }
  },
  {
    "tags": [
      {
        "type": "exports",
        "string": "Page as Page"
      }
    ],
    "description": {
      "full": "<p>@requires modules in browser</p>",
      "summary": "<p>@requires modules in browser</p>",
      "body": ""
    },
    "isPrivate": false,
    "ignore": false,
    "code": "exports.Page = Page;",
    "ctx": {
      "type": "property",
      "receiver": "exports",
      "name": "Page",
      "value": "Page",
      "string": "exports.Page"
    }
  }
]