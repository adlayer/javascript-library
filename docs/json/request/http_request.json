[
  {
    "tags": [
      {
        "type": "class",
        "string": "HttpRequest"
      },
      {
        "type": "constructor",
        "string": ""
      },
      {
        "type": "param",
        "types": [
          "Object"
        ],
        "name": "attributes",
        "description": ""
      },
      {
        "type": "param",
        "types": [
          "Function"
        ],
        "name": "callback",
        "description": ""
      }
    ],
    "description": {
      "full": "<p>Abstract class to make http requests</p>",
      "summary": "<p>Abstract class to make http requests</p>",
      "body": ""
    },
    "isPrivate": false,
    "ignore": false,
    "code": "var HttpRequest = function( attributes, callback ){\n\tvar Http = require('./http').Http;\n\tHttp.apply(this, arguments);\n\t\n\tthis.callback = undefined;",
    "ctx": {
      "type": "function",
      "name": "HttpRequest",
      "string": "HttpRequest()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<ul>\n<li>@method __construct\n<ul><li>@private</li>\n<li>@returns {Object} return this to allow chain pattern</li></ul></li>\n</ul>",
      "summary": "<ul>\n<li>@method __construct\n<ul><li>@private</li>\n<li>@returns {Object} return this to allow chain pattern</li></ul></li>\n</ul>",
      "body": ""
    },
    "ignore": false,
    "code": "var __construct = function(self){\n\t\tif( typeof attributes === 'string' ){\n\t\t\tself.url = attributes;\n\t\t} else {\n\t\t\tself = self.extend(attributes);\n\t\t}\n\t\t// set callback\n\t\tself.callback = callback || self.callback;\n\t}(this);\n};\nexports.HttpRequest = HttpRequest;",
    "ctx": {
      "type": "function",
      "name": "__construct",
      "string": "__construct()"
    }
  }
]